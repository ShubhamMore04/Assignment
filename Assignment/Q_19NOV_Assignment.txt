Create the tables below using the commands and write 15 queris
asked below

CREATE TABLE Worker (
WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME CHAR(25),
LAST_NAME CHAR(25),
SALARY INT(15),
JOINING_DATE DATETIME,
DEPARTMENT CHAR(25)
);

INSERT INTO Worker
(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE,
DEPARTMENT) VALUES
(001, 'Monika', 'Arora', 100000, '14-02-20
09.00.00', 'HR'),
(002, 'Niharika', 'Verma', 80000, '14-06-11
09.00.00', 'Admin'),
(003, 'Vishal', 'Singhal', 300000, '14-02-20
09.00.00', 'HR'),
(004, 'Amitabh', 'Singh', 500000, '14-02-20
09.00.00', 'Admin'),
(005, 'Vivek', 'Bhati', 500000, '14-06-11
09.00.00', 'Admin'),
(006, 'Vipul', 'Diwan', 200000, '14-06-11
09.00.00', 'Account'),
(007, 'Satish', 'Kumar', 75000, '14-01-20
09.00.00', 'Account'),
(008, 'Geetika', 'Chauhan', 90000, '14-04-11
09.00.00', 'Admin');

CREATE TABLE Bonus (
WORKER_REF_ID INT,
BONUS_AMOUNT INT(10),
BONUS_DATE DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(WORKER_ID)
ON DELETE CASCADE
);

INSERT INTO Bonus
(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
(001, 5000, '16-02-20'),
(002, 3000, '16-06-11'),
(003, 4000, '16-02-20'),
(001, 4500, '16-02-20'),
(002, 3500, '16-06-11');

CREATE TABLE Title (
WORKER_REF_ID INT,
WORKER_TITLE CHAR(25),
AFFECTED_FROM DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(WORKER_ID)
ON DELETE CASCADE
);

INSERT INTO Title
(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
(001, 'Manager', '2016-02-20 00:00:00'),
(002, 'Executive', '2016-06-11 00:00:00'),
(008, 'Executive', '2016-06-11 00:00:00'),
(005, 'Manager', '2016-06-11 00:00:00'),
(004, 'Asst. Manager', '2016-06-11 00:00:00'),
(007, 'Executive', '2016-06-11 00:00:00'),
(006, 'Lead', '2016-06-11 00:00:00'),
(003, 'Lead', '2016-06-11 00:00:00');
-------------------------------------------------------------------------------------------------------------

Q-1. Write an SQL query to determine the nth (say n=5) highest salary
from a table.

mysql> select * from worker
    -> order by salary desc limit 4,1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
--------------------------------------------------------------------------------------------------------------
Q-2. Write an SQL query to determine the 5th highest salary without using
TOP or limit method.

mysql> select * from(
    -> select *, rank() over (order by salary desc) as rk
    -> from worker) as t
    -> where rk=5;
+-----------+------------+-----------+--------+---------------------+------------+----+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT | rk |
+-----------+------------+-----------+--------+---------------------+------------+----+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |  5 |
+-----------+------------+-----------+--------+---------------------+------------+----+
1 row in set (0.00 sec)
---------------------------------------------------------------------------------------------------------------

Q-3. Write an SQL query to fetch the list of employees with the same
salary table.

mysql> select * from worker
    -> where salary in (select salary from worker
    -> group by salary
    -> having count(*)>1);
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)
----------------------------------------------------------------------------------------------------------------Q-4. Write an SQL query to show one row twice in results from worker
table.

mysql> select * from worker
    -> union all
    -> select * from worker
    -> order by worker_id;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
16 rows in set (0.00 sec)
----------------------------------------------------------------------------------------------------------------
Q-5. Write an SQL query to fetch the first 50% records from worker table.

mysql> select * from
    -> (select *, rank() over (order by worker_id) as rn
    -> from worker) as t
    -> where rn<=(select count(worker_id)/2 from worker);
+-----------+------------+-----------+--------+---------------------+------------+----+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT | rn |
+-----------+------------+-----------+--------+---------------------+------------+----+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |  1 |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |  2 |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |  3 |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |  4 |
+-----------+------------+-----------+--------+---------------------+------------+----+
4 rows in set (0.00 sec)

OR--------------------

mysql> select * from worker
    -> where worker_id<=(select max(worker_id)/2 from worker);
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.01 sec)
----------------------------------------------------------------------------------------------------------------

Q-6. Write an SQL query to fetch the departments that have less than five people in it.

mysql> select department, count(worker_id) as TOTAL_EMPLOYEE
    -> from worker
    -> group by department
    -> having TOTAL_EMPLOYEE<5;
+------------+----------------+
| department | TOTAL_EMPLOYEE |
+------------+----------------+
| HR         |              2 |
| Admin      |              4 |
| Account    |              2 |
+------------+----------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------

Q-7. Write an SQL query to show all departments along with the number of people in there.

mysql> select department, count(worker_id) as TOTAL_EMPLOYEE
    -> from worker
    -> group by department;
+------------+----------------+
| department | TOTAL_EMPLOYEE |
+------------+----------------+
| HR         |              2 |
| Admin      |              4 |
| Account    |              2 |
+------------+----------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------

Q-8. Write an SQL query to show the last record from worker table.

mysql> select * from worker
    -> order by worker_id desc limit 1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)+
------------------------------------------------------------------------------------------------------------------

Q-9. Write an SQL query to fetch the first row of a worker table.

mysql> select * from worker
    -> order by worker_id limit 1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------

Q-10. Write an SQL query to fetch the last five records from worker table.

mysql> select * from worker
    -> order by worker_id limit 1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------
Q-11. Write an SQL query to print the name of employees having the highest salary in each department.

mysql> select * from(
    -> select *, rank() over (partition by department order by salary desc) rk
    -> from worker) as t
    -> where rk=1;
+-----------+------------+-----------+--------+---------------------+------------+----+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT | rk |
+-----------+------------+-----------+--------+---------------------+------------+----+
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |  1 |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |  1 |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |  1 |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |  1 |
+-----------+------------+-----------+--------+---------------------+------------+----+
4 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------

Q-12. Write an SQL query to fetch three max salaries from a table.

mysql> select * from(
    -> select *, rank() over (order by salary desc) rk
    -> from worker) as t
    -> where rk<4;
+-----------+------------+-----------+--------+---------------------+------------+----+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT | rk |
+-----------+------------+-----------+--------+---------------------+------------+----+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |  1 |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |  1 |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |  3 |
+-----------+------------+-----------+--------+---------------------+------------+----+
3 rows in set (0.00 sec)

OR----------------------------

mysql> select * from worker
    -> order by salary desc limit 3;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)
-----------------------------------------------------------------------------------------------------------------

Q-13. Write an SQL query to fetch three min salaries from a table.

mysql> select * from worker
    -> order by salary limit 3;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)

OR-------------

mysql> select * from(
    -> select *, rank() over (order by salary) rk
    -> from worker) as t
    -> where rk<4;
+-----------+------------+-----------+--------+---------------------+------------+----+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT | rk |
+-----------+------------+-----------+--------+---------------------+------------+----+
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |  1 |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |  2 |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |  3 |
+-----------+------------+-----------+--------+---------------------+------------+----+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------

Q-14. Write an SQL query to fetch nth max salaries from a table.

mysql> select * from(
    -> select *, dense_rank() over (order by salary desc) rk
    -> from worker) as t
    -> where rk=2;
+-----------+------------+-----------+--------+---------------------+------------+----+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT | rk |
+-----------+------------+-----------+--------+---------------------+------------+----+
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |  2 |
+-----------+------------+-----------+--------+---------------------+------------+----+
1 row in set (0.00 sec)

OR----------------

mysql> select * from worker
    -> order by salary desc limit 2,1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------

Q-15. Write an SQL query to fetch departments along with the total
salaries paid for each of them.

mysql> select department, sum(salary) TOTAL_SALARY
    -> from worker
    -> group by department;
+------------+--------------+
| department | TOTAL_SALARY |
+------------+--------------+
| HR         |       400000 |
| Admin      |      1170000 |
| Account    |       275000 |
+------------+--------------+
3 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------
