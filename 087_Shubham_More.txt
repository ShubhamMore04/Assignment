package hashing;

import java.util.Scanner;

public class Bucketting 
{
	int array[][],maxsize,count,row,column;
	  
	  void init(int size)
	  {
		  count=0;
		   row=size;
		 column=size/2;
		  array=new int[row][column];
		  for(int i=0;i<row;i++)
		  {
			  for(int j=0;j<column;j++)
			  {
				  array[i][j]=-1;
			  }
		  }
	  }
	  
	  void insert(int data)
	  {
		int index=data%row;
			
				for(int i=0;i<column;i++)
				{
					
					if(array[index][i]==-1)
					{
						array[index][i]=data;
						count++;
						break;
					}
				}
	  }	
	  
	  boolean isfull()
	  {
		  if(count==row*column)
			return true;
		  else
			  return false;
	  }
	  
	  void print()
	  {
		  for(int i=0;i<row;i++)
		  {
			  System.out.print("@"+i+"-----> ");
			  for(int j=0;j<column;j++) 
			  {
				  if(array[i][j]!=-1)
				  {
					 System.out.print(array[i][j]+" ");  
				  }
			  }
			  System.out.println();
		  }
	  }
	public static void main(String[] args) 
	{
		Scanner in=new Scanner(System.in);
		Bucketting p=new Bucketting();
		p.init(10);
		int ch;
		
		do
		{
			System.out.println("1:Insert\n2:print\nEnter 0 to exit");
			 ch=in.nextInt();
			switch(ch)
			{
			case 1:
			{	
				if(p.isfull())
				{
					System.out.println("HashTAble is Full");
				}
				else
				{
					System.out.println("enter data to Hash");
					int k=in.nextInt();
					p.insert(k);
					System.out.println(k+" inserted");
				}
				break;
			}
			case 2:
				if(p.count==0)
					System.out.println("empty");
				else
                  p.print();
              break;
              case 0:
                  System.out.println("Exiting....tata");
                  break;
              default:
                  System.out.println("Wrong input");
                  break;
			}
		}
		while(ch!=0);
	}
}
